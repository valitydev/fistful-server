[
    {kernel, [
        {logger_level, info},
        {logger, [
            {handler, default, logger_std_h, #{
                level => debug,
                config => #{
                    type => {file, "/var/log/fistful-server/console.json"},
                    sync_mode_qlen => 20
                },
                formatter => {logger_logstash_formatter, #{}}
            }}
        ]}
    ]},

    {epg_connector, [
        {databases, #{
            default_db => #{
                host => "db",
                port => 5432,
                database => "fistful",
                username => "fistful",
                password => "postgres"
            }
        }},
        {pools, #{
            default_pool => #{
                database => default_db,
                size => 10
            }
        }}
    ]},

    {progressor, [
        {call_wait_timeout, 20},
        {defaults, #{
            storage => #{
                client => prg_pg_backend,
                options => #{
                    pool => default_pool
                }
            },
            retry_policy => #{
                initial_timeout => 5,
                backoff_coefficient => 1.0,
                %% seconds
                max_timeout => 180,
                max_attempts => 3,
                non_retryable_errors => []
            },
            task_scan_timeout => 1,
            worker_pool_size => 100,
            process_step_timeout => 30
        }},
        {namespaces, #{
            'ff/identity' => #{
                processor => #{
                    client => machinery_prg_backend,
                    options => #{
                        namespace => 'ff/identity',
                        %% TODO Party client create
                        handler => {fistful, #{handler => ff_identity_machine, party_client => #{}}},
                        schema => ff_identity_machinery_schema
                    }
                }
            },
            'ff/wallet_v2' => #{
                processor => #{
                    client => machinery_prg_backend,
                    options => #{
                        namespace => 'ff/wallet_v2',
                        %% TODO Party client create
                        handler => {fistful, #{handler => ff_wallet_machine, party_client => #{}}},
                        schema => ff_wallet_machinery_schema
                    }
                }
            },
            'ff/source_v1' => #{
                processor => #{
                    client => machinery_prg_backend,
                    options => #{
                        namespace => 'ff/source_v1',
                        %% TODO Party client create
                        handler => {fistful, #{handler => ff_source_machine, party_client => #{}}},
                        schema => ff_source_machinery_schema
                    }
                }
            },
            'ff/destination_v2' => #{
                processor => #{
                    client => machinery_prg_backend,
                    options => #{
                        namespace => 'ff/destination_v2',
                        %% TODO Party client create
                        handler => {fistful, #{handler => ff_destination_machine, party_client => #{}}},
                        schema => ff_destination_machinery_schema
                    }
                }
            },
            'ff/deposit_v1' => #{
                processor => #{
                    client => machinery_prg_backend,
                    options => #{
                        namespace => 'ff/deposit_v1',
                        %% TODO Party client create
                        handler => {fistful, #{handler => ff_deposit_machine, party_client => #{}}},
                        schema => ff_deposit_machinery_schema
                    }
                }
            },
            'ff/withdrawal_v2' => #{
                processor => #{
                    client => machinery_prg_backend,
                    options => #{
                        namespace => 'ff/withdrawal_v2',
                        %% TODO Party client create
                        handler => {fistful, #{handler => ff_withdrawal_machine, party_client => #{}}},
                        schema => ff_withdrawal_machinery_schema
                    }
                }
            },
            'ff/withdrawal/session_v2' => #{
                processor => #{
                    client => machinery_prg_backend,
                    options => #{
                        namespace => 'ff/withdrawal/session_v2',
                        %% TODO Party client create
                        handler => {fistful, #{handler => ff_withdrawal_session_machine, party_client => #{}}},
                        schema => ff_withdrawal_session_machinery_schema
                    }
                }
            }
        }}
    ]},

    {scoper, [
        {storage, scoper_storage_logger}
    ]},

    {dmt_client, [
        % milliseconds
        {cache_update_interval, 5000},
        {max_cache_size, #{
            elements => 20,
            % 50Mb
            memory => 52428800
        }},
        {woody_event_handlers, [
            {scoper_woody_event_handler, #{
                event_handler_opts => #{
                    formatter_opts => #{
                        max_length => 1000
                    }
                }
            }}
        ]},
        {service_urls, #{
            'AuthorManagement' => <<"http://dmt:8022/v1/domain/author">>,
            'Repository' => <<"http://dmt:8022/v1/domain/repository">>,
            'RepositoryClient' => <<"http://dmt:8022/v1/domain/repository_client">>
        }}
    ]},

    {party_client, [
        {services, #{
            party_management => "http://party_management:8022/v1/processing/partymgmt"
        }},
        {woody, #{
            % disabled | safe | aggressive
            cache_mode => safe,
            options => #{
                woody_client => #{
                    event_handler =>
                        {scoper_woody_event_handler, #{
                            event_handler_opts => #{
                                formatter_opts => #{
                                    max_length => 1000
                                }
                            }
                        }}
                }
            }
        }}
    ]},

    {bender_client, [
        {services, #{
            'Bender' => <<"http://bender:8022/v1/bender">>,
            'Generator' => <<"http://bender:8022/v1/generator">>
        }},
        {deadline, 60000}
        %{retries, #{
        %    'GenerateID' => finish,
        %    'GetInternalID' => finish,
        %    '_' => finish
        %}}
    ]},

    {fistful, [
        %% Available options for 'machinery_backend'
        %%     machinegun | progressor | hybrid
        %%
        %% For 'progressor' and 'hybrid' backends ensure config
        %% '{progressor, [ ... ]}' is set.
        {machinery_backend, hybrid},

        {provider, #{
            <<"ncoeps">> => #{
                payment_institution_id => 100,
                contract_template_id => 10000,
                contractor_level => full
            },
            <<"test">> => #{
                payment_institution_id => 1,
                contract_template_id => 1,
                contractor_level => full
            }
        }},
        {services, #{
            'automaton' => "http://machinegun:8022/v1/automaton",
            'accounter' => "http://shumway:8022/accounter",
            'limiter' => "http://limiter:8022/v1/limiter",
            'validator' => "http://validator:8022/v1/validator_personal_data"
        }}
    ]},

    {ff_transfer, [
        %% 4h
        {max_session_poll_timeout, 14400},
        {withdrawal, #{
            default_transient_errors => [
                <<"authorization_failed:temporarily_unavailable">>
            ],
            party_transient_errors => #{
                <<"ExamplePartyID">> => [
                    <<"account_limit_exceeded:amount">>,
                    <<"authorization_failed:destination_rejected">>
                ]
            }
        }}
    ]},

    {ff_server, [
        {ip, "::"},
        {port, 8022},
        {default_woody_handling_timeout, 30000},
        {net_opts, [
            % Bump keepalive timeout up to a minute
            {timeout, 60000}
        ]},
        {scoper_event_handler_options, #{
            event_handler_opts => #{
                formatter_opts => #{
                    max_length => 1000,
                    max_printable_string_length => 80
                }
            }
        }},
        {health_check, #{
            disk => {erl_health, disk, ["/", 99]},
            memory => {erl_health, cg_memory, [99]},
            service => {erl_health, service, [<<"fistful-server">>]}
        }}
    ]},

    {snowflake, [
        % {machine_id, 42}
    ]},

    {prometheus, [
        {collectors, [default]}
    ]},

    {hackney, [
        {mod_metrics, woody_hackney_prometheus}
    ]}
].
